import http.server
import socketserver
from urllib.parse import urlparse
from urllib.parse import parse_qs
from urllib import parse

class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # Sending an '200 OK' response
        self.send_response(200)

        # Setting the header
        self.send_header("Content-type", "text/html")

        # Whenever using 'send_header', you also have to call 'end_headers'
        self.end_headers()

        # Extract query param
        # global name 
        # query_components = parse_qs(urlparse(self.path))
        # print('query_components', query_components)
        # if 'name' in query_components:
        #     name = query_components["name"][0]
        parse_res=parse.urlparse(self.path)
        print('parse_res', parse_res.path[1:])

        # tacoshop = 

        if self.path == '/tacoshop':
            self.path = './public'+ self.path + '.html'
        else:
            self.path = './public'+ self.path

        print(self.path)

        # self.path = './public/'+'.html'
        
        
        # # Some custom HTML code, possibly generated by another function
        # html = f"<html><head></head><body><h1>Hello {name}!</h1></body></html>"

        # # Writing the HTML contents with UTF-8
        # self.wfile.write(bytes(html, "utf8"))

        #return
        return http.server.SimpleHTTPRequestHandler.do_GET(self)

# Create an object of the above class
handler_object = MyHttpRequestHandler

PORT = 80
my_server = socketserver.TCPServer(("", PORT), handler_object)

# Star the server
my_server.serve_forever()
